{% extends "form-builder/settings/_layouts/base" %}
{% import "_includes/forms" as forms %}

{% set isNew = not status.uid %}
{% set title = isNew ? "New Status" : "Edit Status: " ~ status.name %}

{% if craft.app.config.general.allowAdminChanges %}
    {% set readOnly = false %}
{% else %}
    {% set readOnly = true %}
{% endif %}

{% block content %}
    {{ csrfInput() }}
    {{ actionInput('form-builder/submission-status/save') }}
    {{ redirectInput('form-builder/settings/statuses') }}

    {% if not isNew %}
        {{ hiddenInput('id', status.id) }}
    {% endif %}
    {{ forms.textField({
        first: true,
        label: "Name"|t('app'),
        id: 'name',
        name: 'name',
        value: status.name,
        autofocus: true,
        required: true,
        errors: status.getErrors('name'),
        data: {'error-key': 'name'},
        disabled: readOnly
    }) }}

    {{ forms.textField({
        label: "Handle"|t('app'),
        id: 'handle',
        name: 'handle',
        class: 'code',
        autocorrect: false,
        autocapitalize: false,
        value: status.handle,
        required: true,
        errors: status.getErrors('handle'),
        data: {'error-key': 'handle'},
        disabled: readOnly
    }) }}

    {{ forms.lightswitchField({
        label: 'Make this status a default',
        id: 'isDefault',
        name: 'isDefault',
        on: status.isDefault,
        disabled: readOnly
    }) }}

    {{ forms.colorSelectField({
        label: 'Color'|t('app'),
        id: 'color',
        name: 'color',
        value: status.color,
        errors: status.getErrors('color'),
        data: {
            'error-key': 'color',
        },
        disabled: readOnly
    }) }}

    {{ forms.textareaField({
        label: 'Description'|t('app'),
        id: 'description',
        class: 'nicetext',
        name: 'description',
        value: status.description ?? null,
        errors: status.getErrors('description'),
        disabled: readOnly
    }) }}

{% endblock %}


{% if not status.handle %}
    {% js "new Craft.HandleGenerator('##{'name'|namespaceInputId}', '##{'handle'|namespaceInputId}');" %}
{% endif %}
